№ Переменные и типы данных
\ Вывод данных
@
console.log()
@
! В качестве списка аргументов функция получает информацию, которую нужно вывести, например:
@
console.log(10);
console.log('Hello world');
// Hello world
@
! Можно передать не один, а несколько значений:
@
console.log(true, 10, 'Hi', 123);
console.log(10, 1, 2);
console.log('a', 'b', 'c');
// true 10 Hi 123
// 10 1 2
// a b c
@
\ Что такое переменная?
! Переменной в программировании называется именованный контейнер для некоторого значения. Представьте себе ящик с наклееным на него стикером. Вы кладете что-нибудь в ящик и пишете на стикере короткое имя без пробелов и знаков препинания, начинающееся с буквы английского алфавита, примерно так же работает переменная в программировании.
! Для создания переменной используется модификатор (специальное слово для объявления имени переменной). В JS есть три модификатора:
! 1. var
! 2. const
! 3. let
! Модификатор const создает неизменяемую переменную. В чем отличие let и var, мы разберем позднее.
@
var a = 10;
var A = 20;
@
! a и А - это разные переменные, регистр ввода имеет значение
\ Типы данных
! Информация получаемая нами с помощью различных органов чувств делится на зрительную, слуховую, обонятельную, осязательную и другие. В программировании так же есть свое разделение, разделение на типы данных. 
! В JavaScript есть 6 типов данных: number, string, bool, object, undefined, null.
@
var a = 10;
var b = 'Hello';
var c = true;
var d = {'name': 'Maxim', 'age': 20};
var noValue = undefined;
var emptyValue = null;
console.log(a, typeof(a));
console.log(b, typeof(b));
console.log(c, typeof(c));
console.log(d, typeof(d));
console.log(emptyValue, typeof(emptyValue));
console.log(noValue, typeof(noValue));
// 10 "number"
// Hello string
// true "boolean"
// {name: "Maxim", age: 20} "object"
// undefined "undefined"
// null "object"
@
! Рассмотрим подробнее каждый из них:
\ Число
! Числовой тип данных (number) - это  целочисленные и числа с плавающей точкой.
! К числам мы можем применять различные математические операции, такие как умножение *, деление /, сложение +, вычитание - и так далее. 
! Кроме обычных чисел, существуют так называемые «специальные числовые значения», которые относятся к этому типу данных: Infinity, -Infinity и NaN. Мы можем получить такие значения, например, при делении на ноль:
@
console.log(1 / 0);
@
! NaN или Not a Number (не число) означает вычислительную ошибку, например:
@
console.log('hello' / 2);
@
! В отличие от других языков в JS скрипт не остановится при получении ошибки в вычислениях.
\ <Подзаголовок> Функция random
@
var my_random_number = Math.random();
console.log(my_random_number);
@
! При каждом новом запуске этого скрипта будет выводится случайное число в диапазоне от 0 до 1.Расширим диапазон, умножим результат работы функции random на 10:
@
var my_random_number = Math.random() * 10;
console.log(my_random_number);
@
! Теперь результат будет лежать в диапазоне от 0 до 10. Округлим полученное число вниз (9.87126378 -> 9, 1.7213781-> 1)
@
var my_random_number = parseInt( Math.random() * 10 );
console.log(my_random_number);
@
! Функция parseInt() делает значение целочисленным (без дробной части).
! Еще одна математическая операция - остаток от деления
@
console.log(10 % 3); // Взятие остатка от деления (19 % 2 == 1, 28 % 15 == 13, 30 % 25 = 5)
@
\ Строка
! Строка (string) в JavaScript должна быть заключена в кавычки.
! В JavaScript существует три типа кавычек.
! Двойные кавычки: "Привет".
! Одинарные кавычки: 'Привет'.
! Обратные кавычки: `Привет`.
! Двойные или одинарные кавычки являются «простыми», между ними нет разницы в JavaScript.
! Обратные кавычки же имеют «расширенный функционал». Они позволяют нам встраивать выражения в строку, заключая их в ${…}. Например:
@
var name = "Петя";
console.log( `Привет, ${name}!` );
// Привет, Петя
console.log( `результат: ${1 + 2}` ); 
// результат: 3
@
\ Булевый (логический) тип
! Булевый тип (boolean) может принимать только два значения: true (истина) и false (ложь).
! Такой тип, как правило, используется для хранения значений да/нет: true значит «да, правильно», а false значит «нет, не правильно».
@ 
var isReady = true;
var isWorking = false;
console.log(isReady, isWorking);
// true false
@
! Булевые значения также могут быть результатом сравнений:
@
console.log(10 > 5);
// true
console.log(10 < 5);
// false
@
\ null
! Специальное значение null не относится ни к одному из типов, описанных выше. Оно формирует отдельный тип, который содержит только значение null:
@
var age = null;
@
! В JavaScript null не является «ссылкой на несуществующий объект» или «нулевым указателем», как в некоторых других языках. Это просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно».
\ Значение «undefined»
! Специальное значение undefined также стоит особняком. Оно формирует тип из самого себя так же, как и null. 
!Оно означает, что «значение не было присвоено».
! Если переменная объявлена, но ей не присвоено никакого значения, то её значением будет undefined:
@
var x;
console.log(x); // выведет "undefined"
@
! Технически мы можем присвоить значение undefined любой переменной:
\ Объекты и символы
! Тип object (объект) – особенный.
! Все остальные типы называются «примитивными», потому что их значениями могут быть только простые значения (будь то строка или число, или что-то ещё). Объекты же используются для хранения коллекций.
@
var user = {name: 'Maxim', age: 20, password: 123456, email: 'gr4m0zeka@gmail.com'};
console.log(user);
// {name: "Maxim", age: 20, password: 123456, emai: "gr4m0zeka@gmail.com"}
@
\ Задачи на арифметику
! 1. Найти длину окружности L и площадь круга S заданного радиуса R. Формула: L = 2*π*R, S = π*R*R . В качестве значения π использовать 3.14
! 2. Даны два числа a и b. Найти их среднее арифметическое: (a + b)/2.
! 3. Вводится x, найти значение выражения: 3*(x**6) – 6*(x**2) – 7 где x**6 - это икс в степени 6 или x*x*x*x*x*x, пример:
@
console.log(Math.pow(4, 2)) // 16
console.log(Math.pow(3, 3)) // 27
console.log(Math.pow(5, 3)) // 125
@
! 4. Дано значение температуры T в градусах Цельсия. Определить значение этой же температуры в градусах Фаренгейта. Температура по Цельсию Tс и температура по Фаренгейту TF связаны следующим соотношением: TC = (TF − 32)·5/9.
! 5. Известно, что X кг конфет стоит A рублей. Определить, сколько стоит 1 кг и Y кг этих же конфет
! 6. Дано расстояние L в сантиметрах. Используя операцию деления нацело, найти количество полных метров в нем (1 метр = 100 см).
! 7. Дана масса M в килограммах. Используя операцию деления нацело, найти количество полных тонн в ней (1 тонна = 1000 кг)
! 8. Дан размер файла в байтах. Используя операцию деления нацело, найти количество полных килобайтов, которые занимает данный файл (1 килобайт = 1024 байта)
! 9. Даны целые положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Используя операцию деления нацело, найти количество отрезков B, размещенных на отрезке A.
